apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/dependencies.gradle"

android {
    def STRING = "String"
    def baseAppId = "com.example.tmdbsample"
    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        applicationId baseAppId

        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    // to build the app put keystore.properties file into 'credentials' directory of the application
    def credentialsDir = "credentials"
    def keystorePropertiesFile = rootProject.file("${credentialsDir}/keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file("${credentialsDir}/${keystoreProperties['file']}")
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        all {
            signingConfig signingConfigs.release
        }
        debug {
            useProguard false
            // Only use this flag on builds you don't proguard or upload to beta-by-crashlytics
            ext.alwaysUpdateBuildId = false
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "stage"
    productFlavors {
        prod {
            dimension "stage"
            buildConfigField STRING, "API_KEY", '"dfc98e46c2b0ce3513a0a149d1b90441"'
            buildConfigField STRING, "URL_BASE", '"https://api.themoviedb.org"'
            buildConfigField STRING, "API_VERSION", '"3"'
        }
    }
    androidExtensions {
        experimental = true
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "TMDB-Sample-${variant.buildType.name}-${variant.versionName}(${variant.versionCode}).apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.kotlin.kotlin_std

    implementation libs.support.v4
    implementation libs.support.appCompat
    implementation libs.support.compat
    implementation libs.support.design
    implementation libs.support.recyclerView

    implementation libs.support.constraint

    // Room
    implementation libs.room.runtime
    kapt libs.room.compiler


    implementation libs.lifecycle.runtime
    implementation libs.lifecycle.extensions
    kapt libs.lifecycle.compiler


    // RETROFIT
    implementation libs.retrofit.gson
    implementation libs.retrofit.retrofit
    implementation libs.retrofit.converterGson
    implementation libs.retrofit.adapaterRxJava
    implementation libs.retrofit.loggingInterceptor

    implementation libs.rx.rxJava
    implementation libs.rx.rxAndroid
    implementation libs.rx.rxKotlin

    implementation libs.koin.core
    implementation libs.koin.android
    implementation libs.koin.architecture

    implementation libs.glide.glide, {
        exclude group: "com.android.support"
    }
    implementation libs.glide.okhttp, {
        transitive = false
    }
    implementation libs.glide.annotations
    kapt libs.glide.compiler

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
}
